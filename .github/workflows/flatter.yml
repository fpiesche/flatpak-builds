name: Flatter

on:
  workflow_dispatch:
    inputs:
      publish:
        type: boolean
        description: Publish builds
      appids:
        type: string
        description: app IDs to build
  push:
    paths:
      - "apps/*/*.yml"
    branches:
      - main
  pull_request:

jobs:
  manifests:
    name: Get list of manifests to build
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.builds.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed manifests
        if: ${{ github.event_name }} == "push"
        id: changed_files_action
        uses: tj-actions/changed-files@v45
        with:
          files: apps/*/*.yml

      - name: Assemble build matrix
        id: builds
        run: |
          if [[ "${{ github.event_name }}" == "push" || "${{ github.event_name }}" == "pull_request" ]]; then
            APPS="${{ steps.changed_files_action.outputs.all_changed_files }}"
          elif [[ "${{ inputs.appids }}" != "" ]]; then
            APPS="${{ inputs.appids }}"
          else
            APPS=$(ls -1 apps/*/*.yml)
          fi
          MATRIX="[]"
          for appid in ${APPS}; do
            manifest="apps/${appid}/${appid}.yml"
            sdk=$(yq e ".sdk" $manifest | sed "s/org.\(.*\).Sdk/\1/" )
            sdk-version=$(yq e ".runtime-version" $manifest)
            if [ -f apps/${appid}/flathub.json ]; then
              arches=$(jq '. | ."only-arches"' apps/${appid}/flathub.json)
            else
              arches="[\"x86_64\", \"aarch64\"]"
            fi
            MATRIX=$(echo $MATRIX | jq ".[. | length] |= . + {\"appid\": \"$appid\", \"manifest\": \"$manifest\", \"sdk\": \"$sdk\", \"sdk-version\": \"$sdk-version\", \"arches\": \"$arches\"}")
          done
          fi
          echo 'matrix<<EOF' >> $GITHUB_OUTPUT
          echo $MATRIX >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "::group::Output"
          cat $GITHUB_OUTPUT
          echo "::endgroup::"

  flatter:
    name: ${{ matrix.appid }} ${{ matrix.arch }}
    needs: manifests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/andyholmes/flatter/${{ matrix.sdk }}:${{ matrix.sdk-version}}}
      options: --privileged
    permissions:
      pages: write
      id-token: write
      contents: write

    strategy:
      matrix: ${{fromJson(needs.manifests.outputs.matrix)}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Setup GPG
        id: gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build
        id: flatpak
        uses: andyholmes/flatter@main
        with:
          files: ${{ matrix.manifest }}
          flatpak-build-bundle-args: |
            --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo
          arch: ${{ matrix.arch }}
          gpg-sign: ${{ steps.gpg.outputs.fingerprint }}
          upload-bundles: true
          # upload-pages-includes: ${{ steps.weblisting-files.outputs.files }}
          # upload-pages-artifact: ${{ matrix.arch == 'aarch64' }}

      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{ steps.flatpak.outputs.repository }}
          name: ${{ matrix.appid }}_${{ matrix.arch }}

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: flatter
    permissions:
      pages: write
      contents: write
    environment:
      name: github-pages

    steps:
      - name: Determine whether to publish
        run: |
          PUBLISH=false
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ inputs.publish }}" == "true" ]]; then PUBLISH=true; fi
          echo PUBLISH=$PUBLISH >> $GITHUB_ENV

      - name: Checkout
        if: ${{ env.PUBLISH }} == "true"
        uses: actions/checkout@v4

      - name: Get build artifacts
        if: ${{ env.PUBLISH }} == "true"
        uses: actions/download-artifact@v4
        with:
          path: _site

      - name: Assemble files for web listings
        id: weblisting-files
        run: |
          find apps -name "*.metainfo.xml" -exec cp {} ./_site/ \;
          rename ".metainfo.xml" ".xml" ./_site/*.metainfo.xml
          find apps -name "*.flatpakref" -exec cp {} ./_site/ \;
          touch index.html

      - name: Generate index.html file
        if: ${{ env.PUBLISH }} == "true"
        run: |
          npm i markdown-to-html-cli -g
          markdown-to-html \
            --source README.md \
            --output _site/index.html \
            --title "retrogame flathub repo" \
            --description "Various things missing from Flathub" \
            --github-corners "https://github.com/fpiesche/flatpak-builds"

      - name: Publish repo
        if: ${{ env.PUBLISH }} == "true"
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: _site
