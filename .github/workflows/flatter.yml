name: Flatter

on:
  workflow_dispatch:
    inputs:
      publish:
        type: boolean
        description: Publish builds
      appids:
        type: string
        description: app IDs to build
  push:
    paths:
      - "apps/*/*.yml"
    branches:
      - main
  pull_request:

jobs:
  manifests:
    name: Get list of manifests to build
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.file_list.outputs.files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed manifests
        if: ${{ github.event_name == "push" }}
        id: changed_files_action
        uses: tj-actions/changed-files@v45
        with:
          files: apps/*/*.yml

      - name: Build file list output
        id: file_list
        run: |
          echo 'files<<EOF' >> $GITHUB_OUTPUT
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo ${{ steps.changed_files_action.outputs.all_changed_files }} >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.appids }}" != "" ]]
            echo ${{ inputs.appids }} | sed "s/ /\n/" >> $GITHUB_OUTPUT
          else
            echo $(ls -1 apps/*/*.yml) >> $GITHUB_OUTPUT
          fi
          echo EOF >> $GITHUB_OUTPUT

  flatter:
    name: ${{ matrix.arch }}
    needs: manifests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/andyholmes/flatter/freedesktop:24.08
      options: --privileged
    permissions:
      pages: write
      id-token: write
      contents: write

    strategy:
      matrix:
        arch: [x86_64, aarch64]
      fail-fast: false
      # Only one job at a time can use the shared repository cache
      max-parallel: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Setup GPG
        id: gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Assemble files for web listings
        id: weblisting-files
        run: |
          find apps -name "*.metainfo.xml" -exec cp {} . \;
          rename ".metainfo.xml" ".xml" *.metainfo.xml
          echo 'files<<EOF' >> $GITHUB_OUTPUT
          ls -1 *.xml >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Build
        id: flatpak
        uses: andyholmes/flatter@main
        with:
          files: ${{ needs.manifests.outputs.files }}
          flatpak-build-bundle-args: |
            --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo
          arch: ${{ matrix.arch }}
          gpg-sign: ${{ steps.gpg.outputs.fingerprint }}
          upload-bundles: true
          upload-pages-includes: ${{ steps.weblisting-files.outputs.files }}
          upload-pages-artifact: ${{ matrix.arch == 'aarch64' }}

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: flatter
    permissions:
      pages: write
      contents: write
    environment:
      name: github-pages

    steps:
      - name: Determine whether to publish
        run: |
          PUBLISH=false
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ inputs.publish }}" == "true" ]]; then PUBLISH=true; fi
          echo PUBLISH=$PUBLISH >> $GITHUB_ENV

      - name: Checkout
        if: ${{ env.PUBLISH }} == "true"
        uses: actions/checkout@v4

      - name: Get Pages artifact
        if: ${{ env.PUBLISH }} == "true"
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: _site

      - name: Extract artifact
        if: ${{ env.PUBLISH }} == "true"
        run: |
          cd _site
          tar -xf artifact.tar
          rm artifact.tar
          touch index.html

      - name: Generate index.html file
        if: ${{ env.PUBLISH }} == "true"
        run: |
          npm i markdown-to-html-cli -g
          markdown-to-html \
            --source README.md \
            --output _site/index.html \
            --title "retrogame flathub repo" \
            --description "Various things missing from Flathub" \
            --github-corners "https://github.com/fpiesche/flatpak-builds"

      - name: Publish repo
        if: ${{ env.PUBLISH }} == "true"
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: _site

